swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0

host: api.example.com
basePath: /v1
schemes:
  - https

paths:
  /tasks/{collectionId}:
    get:
      summary: Returns a task collection by ID.
      parameters:
        - in: path
          name: collectionId
          required: true
          type: string
          description: Gets a task collection stored in the task storage server.
      responses:
        200:
          description: OK
        404:
          description: Not Found
    post:
      summary: Creates a task collection.
      parameters:
        - in: path
          name: collectionId
          required: true
          type: string
          description: Creates a task collection stored in the task storage server.
        - in: body
          name: body
          description: JSON object containing the task collection.
          required: true
          schema:
            type: object  # Define your JSON object schema here
            required:
              - id
              - title
              - completed
            properties:
              lastModified:
                type: integer
                example: 1711149159
                description: last modified
              tasks:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 0
                      description: Relative ID of the individual task. Used to index tasks within the collection.
                    title:
                      type: string
                      example: Buy Bread
                      description: Title of the task.
                    description:
                      type: string
                      example: Buy some bread while grocery shopping. Preferably something sourdough or baguette.
                      description: Description of the task.
                    location:
                      type: string
                      example: Best Bread Bakery, Vaughan, ON A1A 1A1
                      description: Location related to the task. Used to hyperlink a Maps location in a given task.
                    category:
                      type: string
                      example: Grocery
                      description: Category that the tasks belongs to. Used to organize tasks.
                    dueDate:
                      type: integer
                      example: 1711149159
                      description: Date that the task is "due". Used to organize time-sensitive tasks.
                    recurrence:
                      type: array
                      items:
                        type: object
                        properties: 
                          recurrenceRange:
                            type: string
                            enum:
                              - noEnd
                              - until
                            example: noEnd
                            description: Specifies how much the task will recur. `noEnd` means the task recur forever based on the `interval` value. `until` means the task will recur based on the `interval`, until the `endDate` is reached.
                          interval:
                            type: integer
                            example: 10080
                            description: The time between each task in the recurrence in minutes.
                          endDate:
                            type: integer
                            example: 1713136359
                            description: End date of the recurring task. Used when specifying when a recurring task should stop recurring.
                    completed:
                      type: boolean
                      example: false
                      description: Specifies if a task has been completed.

      responses:
        200:
          description: OK
        400:
          description: Bad request
        409:
          description: Conflict
    put:
      summary: Updates a task collection by ID.
      parameters:
         - in: path
           name: collectionId
           required: true
           type: string
           description: Creates a task collection stored in the task storage server.
         - in: body
           name: body
           description: JSON object containing the task collection.
           required: true
           schema:
             type: object  # Define your JSON object schema here
             required:
               - id
               - title
               - completed
             properties:
               lastModified:
                 type: integer
                 example: 1711149159
                 description: last modified
               tasks:
                 type: array
                 items:
                   type: object
                   properties:
                     id:
                       type: integer
                       example: 0
                       description: Relative ID of the individual task. Used to index tasks within the collection.
                     title:
                       type: string
                       example: Buy Bread
                       description: Title of the task.
                     description:
                       type: string
                       example: Buy some bread while grocery shopping. Preferably something sourdough or baguette.
                       description: Description of the task.
                     location:
                       type: string
                       example: Best Bread Bakery, Vaughan, ON A1A 1A1
                       description: Location related to the task. Used to hyperlink a Maps location in a given task.
                     category:
                       type: string
                       example: Grocery
                       description: Category that the tasks belongs to. Used to organize tasks.
                     dueDate:
                       type: integer
                       example: 1711149159
                       description: Date that the task is "due". Used to organize time-sensitive tasks.
                     recurrence:
                       type: array
                       items:
                         type: object
                         properties: 
                           recurrenceRange:
                             type: string
                             enum:
                               - noEnd
                               - until
                             example: noEnd
                             description: Specifies how much the task will recur. `noEnd` means the task recur forever based on the `interval` value. `until` means the task will recur based on the `interval`, until the `endDate` is reached.
                           interval:
                             type: integer
                             example: 10080
                             description: The time between each task in the recurrence in minutes.
                           endDate:
                             type: integer
                             example: 1713136359
                             description: End date of the recurring task. Used when specifying when a recurring task should stop recurring.
                     completed:
                       type: boolean
                       example: false
                       description: Specifies if a task has been completed. 

      responses:
        200:
          description: OK
        400:
          description: Bad request
        404:
          description: Not found
    delete:
      summary: Deletes a task collection by ID.
      parameters:
        - in: path
          name: collectionId
          required: true
          type: string
          description: Deletes a task collection stored in the task storage server.
      responses:
        200:
          description: OK
        404:
          description: Not Found